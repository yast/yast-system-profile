/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:	include/system-profile/dialogs.ycp
 * Package:	Configuration of system-profile
 * Summary:	Dialogs definitions
 * Authors:	J. Daniel Schmidt <jdsn@suse.de>
 *
 * $Id: dialogs.ycp 27914 2006-02-13 14:32:08Z locilka $
 */

{

textdomain "system-profile";

import "Label";
import "Wizard";
import "Popup";
import "SystemProfile";

include "system-profile/texts.ycp";

/**
 * Configure dialog
 * @return dialog result
 */
symbol SystemProfileDialog ()
{
    /* SystemProfile configure1 dialog contents */
    term contents = `VBox(
        `VSpacing(1),
        `VBox(
            `Label(`id(`description), DESC["short"]:""),
            `VSpacing(0.5),
            `CheckBox(`id(`runSmoltMonthly), MONTHLYCHECKBOX, SystemProfile::smoltMonthlyEnabled),
            `ReplacePoint(`id(`smoltDataReplace), `VSpacing(`id(`smoltData), 0.5)),
            `HBox(
                `PushButton(`id(`sendSystemData),  _("Send Profile")),
                `PushButton(`id(`showSystemData),  _("Show Profile"))
            )
        )
    );

    string helpText = "";
    helpText =  sformat("<p><b>%1</b></p>", TITLES["smoltProject"]:"") +
                HELPS["c1"]:"" + HELPS["c2"]:"" + HELPS["c3"]:"" + HELPS["c4"]:"";

    Wizard::SetContentsButtons(SystemProfile::moduleTitle, contents, helpText,
        Label::BackButton(), Label::FinishButton());
    Wizard::DisableBackButton();

    any ret = nil;
    while(true)
    {
        ret = UI::UserInput();

        if (ret == `abort || ret == `cancel || ret == `next || ret == `back)
        {
            SystemProfile::smoltMonthlyEnabled = ( UI::QueryWidget(`id(`runSmoltMonthly), `Value  ) == true ) ;
            break;
        }
        else if (ret == `showSystemData)
        {
            y2milestone("The user wanted to see the smolt data, excuting smolt to gather information.");
            string sysData = SystemProfile::executeSmoltCmd(`print);
            if (sysData != nil && sysData != "")
            {
                UI::ReplaceWidget(`id(`smoltDataReplace), `RichText(`id(`smoltData), `opt(`plainText), ""));
                UI::ChangeWidget(`id(`smoltData), `Value, sysData);
                UI::RecalcLayout();
            }
            else
            {
                y2milestone("executeSmoltCmd returned emtpy or nil data, thus an error occurred.");
                // (bnc#441221) fix typo
                string errMsg1 = _("An error occurred while gathering system information.");
                string errMsg2 = _("Make sure that the smolt package is installed.");
                Popup::Message(sformat("%1\n%2", errMsg1, errMsg2));
            }
        }
        else if (ret == `sendSystemData)
        {
            string sysData = SystemProfile::executeSmoltCmd(`auto);
            UI::ReplaceWidget(`id(`smoltDataReplace), `RichText(`id(`smoltData), `opt(`plainText), ""));
            UI::ChangeWidget(`id(`smoltData), `Value, sysData);
            UI::RecalcLayout();
            string notifyHeading = _("System profile has been successfully sent.");
            string notifyBody    = _("At the end of the system profile details, find a URL and your password to edit
and comment your profile online.
");

            Popup::Notify(sformat("%1\n\n%2", notifyHeading, notifyBody));
        }
        else
        {
            y2error("unexpected retcode: %1", ret);
            continue;
        }


    }


    if (! is(ret, symbol)) ret = `next;

    return (symbol) ret;
}



symbol SystemProfileAutoDialog()
{
   /* SystemProfileAuto configure dialog contents */
    term contents = `VBox(
        `VSpacing(1),
        `VBox(
            `Label(`id(`description), DESC["short"]:""),
            `VSpacing(0.5),
            `CheckBox(`id(`runSmoltMonthly), MONTHLYCHECKBOX, SystemProfile::smoltMonthlyEnabled)
        )
    );

    string helpText = "";
    helpText =  sformat("<p><b>%1</b></p>", TITLES["smoltProject"]:"") +
                HELPS["c1"]:"" + HELPS["c2"]:"" + HELPS["c3"]:"";

    Wizard::SetContentsButtons(SystemProfile::moduleTitle, contents, helpText,
        Label::BackButton(), Label::FinishButton());
    Wizard::DisableBackButton();

    any ret = nil;
    while(true)
    {
        ret = UI::UserInput();

        if (ret == `abort || ret == `cancel || ret == `next || ret == `back)
        {
            SystemProfile::smoltMonthlyEnabled = ( UI::QueryWidget(`id(`runSmoltMonthly), `Value  ) == true ) ;
            break;
        }
        else
        {
            y2error("unexpected retcode: %1", ret);
            continue;
        }
    }

    if (! is(ret, symbol)) ret = `next;

    return (symbol) ret;
}

/* EOF */
}
